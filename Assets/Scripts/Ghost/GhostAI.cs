//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
namespace AssemblyCSharp
{
	public abstract class GhostAI
	{
		protected PacmanData[] Players;
		protected BoardAccessor Accessor;
		protected BoardObject Data;
		
		public GhostAI( PacmanData[] players, BoardAccessor Accessor, BoardObject Data )
		{
			this.Players = players;
			this.Accessor = Accessor;
			this.Data = Data;
		}

		public abstract IntVector2 ComputeDirection( List<IntVector2> legalTurns, int maxSpeed );

		public IntVector2 ComputeDirectionToTargets( List<BoardLocation> targets, List<IntVector2> legalTurns, int maxSpeed )
		{
			IntVector2 toMove = legalTurns[0];
			int minDistance = int.MaxValue;
			
			foreach ( BoardLocation target in targets )
			{
				// todo bug where ghost reverses direction in corners
				// "targets" closest player
				int distance;
				IntVector2 direction = Accessor.moveTowards( Data, target, maxSpeed, out distance );
				if ( distance < minDistance )
				{
					toMove = direction;
					minDistance = distance;
				}
			}

			return toMove;
		}
	}
}

