//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
namespace AssemblyCSharp
{
	public class ClydeAI : GhostAI
	{
		public ClydeAI ( PacmanData[] players, BoardAccessor Accessor, BoardObject Data ) 
			: base( players, Accessor, Data )
		{
		}
		
		public override IntVector2 ComputeDirection( List<IntVector2> legalTurns, int maxSpeed )
		{
			List<BoardLocation> targets = new List<BoardLocation>();
			foreach ( PacmanData player in Players )
			{
				if ( IntVector2.OrthogonalDistance( player.Data.boardLocation.location, Data.boardLocation.location ) > 8 )
				{
					targets.Add( new BoardLocation( player.Data.boardLocation.location, new IntVector2( 0, 0 ) ) );
				}
			}

			if ( targets.Count <= 0 )
			{
				targets.Add( new BoardLocation( new IntVector2( 0, 0 ), new IntVector2( 0, 0 ) ) );
			}
			
			return base.ComputeDirectionToTargets( targets, legalTurns, maxSpeed );
		}
	}
}

